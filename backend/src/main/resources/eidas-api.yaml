openapi: 3.0.3
info:
  title: SSI EIDAS Bridge API
  description: |
    SSI eIDAS Bridge API is a component linking the European
    Trust and Legal Framework, named eIDAS (electronic IDentification,
    Authentication and trust Services), with the Self-Sovereign Identification
    (SSI) global trust framework, based on Decentralized Identifiers, or DIDs.
  version: 1.0.0
  termsOfService: "/docs/terms"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.vidchain.net
    description: Validated ID API
  - url: https://dev.vidchain.net
    description: Validated ID API Dev
  - url: http://localhost:9002
    description: localhost
tags:
  - name: Authentication Service
    description: Manage Entities Authentication
  - name: SSI EIDAS Bridge
    description: Sign and validate EIDAS signatures
paths:
  /eidas-bridge/v1/authentication/requests:
    post:
      operationId: post-eidas-bridge-v1-authentication-requests
      tags:
        - Authentication Service
      summary: Initiate a DID Authentication Request
      description: Initiate a DID Authentication Request
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionsRequest"
            examples:
              User Session Request:
                value:
                  grantType: urn:ietf:params:oauth:grant-type:jwt-bearer
                  assertion: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  scope: eidas profile user
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionsResponse"
              examples:
                Access Token:
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                    tokenType: bearer
                    expiresIn: 900
                    issuedAt: "1467841035013"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Bad Request:
                  $ref: "#/components/examples/BadRequest"
                Issuer Not Found:
                  $ref: "#/components/examples/IssuerNotFound"
                Expired Token:
                  $ref: "#/components/examples/ExpiredToken"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Internal Server Error:
                  $ref: "#/components/examples/InternalError"
  /eidas-bridge/v1/authentication/request-jwts:
    get:
      operationId: post-eidas-bridge-v1-authentication-request-jwts
      tags:
        - Authentication Service
      summary: Retrieves a JWT token Authentication Request
      description: Retrieves a JWT token Authentication Request
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionsRequest"
            examples:
              User Session Request:
                value:
                  grantType: urn:ietf:params:oauth:grant-type:jwt-bearer
                  assertion: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  scope: eidas profile user
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionsResponse"
              examples:
                Access Token:
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                    tokenType: bearer
                    expiresIn: 900
                    issuedAt: "1467841035013"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Bad Request:
                  $ref: "#/components/examples/BadRequest"
                Issuer Not Found:
                  $ref: "#/components/examples/IssuerNotFound"
                Expired Token:
                  $ref: "#/components/examples/ExpiredToken"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Internal Server Error:
                  $ref: "#/components/examples/InternalError"
  /eidas-bridge/v1/authentication/sessions:
    post:
      operationId: post-eidas-bridge-v1-authentication-sessions
      tags:
        - Authentication Service
      summary: Requests a Sessions Token
      description: |
        Requests a Sessions Token to call the protected API calls.
        This call requires to send an Authentication Response Token after
        calling the Authentication Request endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionsRequest"
            examples:
              User Session Request:
                value:
                  grantType: urn:ietf:params:oauth:grant-type:jwt-bearer
                  assertion: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  scope: eidas profile user
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionsResponse"
              examples:
                Access Token:
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                    tokenType: bearer
                    expiresIn: 900
                    issuedAt: "1467841035013"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Bad Request:
                  $ref: "#/components/examples/BadRequest"
                Issuer Not Found:
                  $ref: "#/components/examples/IssuerNotFound"
                Expired Token:
                  $ref: "#/components/examples/ExpiredToken"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Internal Server Error:
                  $ref: "#/components/examples/InternalError"
  /eidas-bridge/v1/signatures:
    post:
      tags:
        - SSI EIDAS Bridge
      summary: Creates an eIDAS eSeal signature
      description: Creates an eIDAS eSeal signature using the associated EIDAS keys with a DID
      operationId: post-eidas-bridge-v1-signatures
      security:
        - bearerAuth: []
      requestBody:
        description: |
          It requires the following fields:
          - **issuer**: DID of the issuer
          - **payload**: Payload to sign
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignatureInput"
            examples:
              eSeal a Credential Payload:
                value:
                  issuer: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme
                  password: <password>
                  payload:
                    "@context":
                      - "https://www.w3.org/2018/credentials/v1"
                      - "https://www.w3.org/2018/credentials/examples/v1"
                    id: "http://example.edu/credentials/1872"
                    type:
                      - VerifiableCredential
                      - AlumniCredential
                    issuer: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
                    issuanceDate: "2019-12-31T23:59:60Z"
                    credentialSubject:
                      id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
                      alumniOf:
                        id: did:key:zQ3shZc2QzApp2oymGvQbzP8eKheVshBHbU4ZYjeXqwSKEn6N
                        name:
                          - value: Example University
                            lang: en
                          - value: "Exemple d'Universit√©"
                            lang: fr
              eSeal a Verifiable Credential Payload:
                value:
                  issuer: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme
                  payload:
                    "@context":
                      - "https://www.w3.org/2018/credentials/v1"
                      - "https://www.w3.org/2018/credentials/examples/v1"
                    id: "http://example.edu/credentials/1872"
                    type:
                      - VerifiableCredential
                      - AlumniCredential
                    issuer: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
                    issuanceDate: "2019-12-31T23:59:60Z"
                    credentialSubject:
                      id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
                      alumniOf:
                        id: did:key:zQ3shZc2QzApp2oymGvQbzP8eKheVshBHbU4ZYjeXqwSKEn6N
                        name:
                          - value: Example University
                            lang: en
                          - value: "Exemple d'Universit√©"
                            lang: fr
                    proof:
                      type: EcdsaSecp256k1Signature2019
                      created: "2019-06-18T21:19:10Z"
                      proofPurpose: assertionMethod
                      verificationMethod: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2#keys-1
                      jws: eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2Us...
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/verifiableCredentialEsealed"
              examples:
                One Proof EIDAS Signature:
                  value:
                    "@context":
                      - "https://www.w3.org/2018/credentials/v1"
                      - "https://api.vidchain.net/credentials/verifiableId/v1"
                    id: http://example.vid/credentials/1872
                    type: ['VerifiableCredential','VerifiableID']
                    issuer: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme
                    issuanceDate: "2019-06-22T14:11:44Z"
                    expirationDate: "2019-06-22T14:11:44Z"
                    credentialSubject:
                      id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
                      firstName: "Eva"
                      lastName: "Monroe"
                      gender: "Female"
                      dateOfBirth: "12/11/1970"
                      placeOfBirth: "Madrid"
                      currentAddress: "Arago 179 4a"
                      city: "Barcelona"
                      state: "Catalunya"
                      zip: "08011"
                    proof:
                      type: "CAdESRSASignature2020"
                      created: "2020-06-22T14:11:44Z"
                      proofPurpose: "assertionMethod"
                      verificationMethod: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
                      cades: 308204c906092a864886f70d010702...266ad9fee3375d8095
                Mutiple Proofs EIDAS Signature:
                  value:
                    "@context":
                      - "https://www.w3.org/2018/credentials/v1"
                      - "https://api.vidchain.net/credentials/verifiableId/v1"
                    id: http://example.vid/credentials/1872
                    type: ['VerifiableCredential','VerifiableID']
                    issuer: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme
                    issuanceDate: "2019-06-22T14:11:44Z"
                    expirationDate: "2019-06-22T14:11:44Z"
                    credentialSubject:
                      id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
                      firstName: "Eva"
                      lastName: "Monroe"
                      gender: "Female"
                      dateOfBirth: "12/11/1970"
                      placeOfBirth: "Madrid"
                      currentAddress: "Arago 179 4a"
                      city: "Barcelona"
                      state: "Catalunya"
                      zip: "08011"
                    proof:
                      - type: "EcdsaSecp256k1Signature2019"
                        created: "2019-06-22T14:11:44Z"
                        proofPurpose: "assertionMethod"
                        verificationMethod: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme#keys-1
                        jws: "eyJhbGciOiJFU...pKTV3co3wXAE"
                      - type: "CAdESRSASignature2020"
                        created: "2020-06-22T14:11:44Z"
                        proofPurpose: "assertionMethod"
                        verificationMethod: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
                        cades: 308204c906092a864886f70d010702...266ad9fee3375d8095
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Bad Request:
                  $ref: "#/components/examples/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Forbidden:
                  $ref: "#/components/examples/Forbidden"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Internal Server Error:
                  $ref: "#/components/examples/InternalError"
  /eidas-bridge/v1/signature-validations:
    post:
      tags:
        - SSI EIDAS Bridge
      summary: Validates a W3C Verifiable Credential eSealed with an EIDAS QEC
      description: Validates a W3C Verifiable Credential eSealed with an EIDAS QEC
      operationId: post-eidas-bridge-v1-signature-validations
      requestBody:
        description: W3C Verifiable Credential with an Ades Proof
        content:
          application/json:
            schema:
              type: object
            examples:
              One Proof EIDAS Signature:
                value:
                  "@context":
                    - "https://www.w3.org/2018/credentials/v1"
                    - "https://api.vidchain.net/credentials/verifiableId/v1"
                  id: http://example.vid/credentials/1872
                  type: ['VerifiableCredential','VerifiableID']
                  issuer: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme
                  issuanceDate: "2019-06-22T14:11:44Z"
                  expirationDate: "2019-06-22T14:11:44Z"
                  credentialSubject:
                    id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
                    firstName: "Eva"
                    lastName: "Monroe"
                    gender: "Female"
                    dateOfBirth: "12/11/1970"
                    placeOfBirth: "Madrid"
                    currentAddress: "Arago 179 4a"
                    city: "Barcelona"
                    state: "Catalunya"
                    zip: "08011"
                  proof:
                    type: "CAdESRSASignature2020"
                    created: "2020-06-22T14:11:44Z"
                    proofPurpose: "assertionMethod"
                    verificationMethod: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
                    cades: 308204c906092a864886f70d010702...266ad9fee3375d8095
              Mutiple Proofs EIDAS Signature:
                value:
                  "@context":
                    - "https://www.w3.org/2018/credentials/v1"
                    - "https://api.vidchain.net/credentials/verifiableId/v1"
                  id: http://example.vid/credentials/1872
                  type: ['VerifiableCredential','VerifiableID']
                  issuer: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme
                  issuanceDate: "2019-06-22T14:11:44Z"
                  expirationDate: "2019-06-22T14:11:44Z"
                  credentialSubject:
                    id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
                    firstName: "Eva"
                    lastName: "Monroe"
                    gender: "Female"
                    dateOfBirth: "12/11/1970"
                    placeOfBirth: "Madrid"
                    currentAddress: "Arago 179 4a"
                    city: "Barcelona"
                    state: "Catalunya"
                    zip: "08011"
                  proof:
                    - type: "EcdsaSecp256k1Signature2019"
                      created: "2019-06-22T14:11:44Z"
                      proofPurpose: "assertionMethod"
                      verificationMethod: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme#keys-1
                      jws: "eyJhbGciOiJFU...pKTV3co3wXAE"
                    - type: "CAdESRSASignature2020"
                      created: "2020-06-22T14:11:44Z"
                      proofPurpose: "assertionMethod"
                      verificationMethod: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
                      cades: 308204c906092a864886f70d010702...266ad9fee3375d8095
        required: true
      responses:
        "204":
          description: Valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResult"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Bad Request:
                  $ref: "#/components/examples/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Forbidden:
                  $ref: "#/components/examples/Forbidden"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Internal Server Error:
                  $ref: "#/components/examples/InternalError"
  /eidas-bridge/v1/eidas-keys/{id}:
    put:
      tags:
        - SSI EIDAS Bridge
      summary: Set up a DID with an eIDAS QEC to eSeal W3C Verifiable Credentials
      description: Set up a DID with an eIDAS QEC to eSeal W3C Verifiable Credentials
      operationId: put-eidas-bridge-v1-eidas-keys
      security:
        - bearerAuth: []
      requestBody:
        description: Set-up options for linking a DID with its eIDAS QEC
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EidasQecInput"
            examples:
              EIDAS QEC Example:
                value:
                  did: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
                  eidasQec: 30820a5102010330820a1706092a864886f70d010701a0820a0804820a0430820a00308204b706092a864886f70d010706a08204a8308204a40201003082049d06092a864886f70d010701301c060a2a864886f70d010c0106300e0408aafc004c0e4c0ed20202080080820470bf1b516867a1f611e7bd3b547818e77d477b353586d6806625225910454ca2f4fe6bbf3bcc203538288c445ebbcaa2f5f68d6b0037061bda3426e9219caf16f7cb8ba8802e4ed31178cc3c35c576f5d1d9b8c53bf3199596d14ccd003771126dd117c9dd9ec68d9e691d48adb5dd68fd7a25f5db139dd7081150216433555bdd16429d8278ef6a2e270e0e25b908d56a7bc0662db3170748a3364b776c0ff5da21393b4ee88ff441373bef05e48f0ab71be35f2b7cfe7ff8f614202cf52dd7bbd8aa2a46ba0d1c8633a35ad86584a0bccf0ea001c4d2a01e4851fba954374f65771abcc9e0025c5276b72b0ecfb83711b3d83eaafc8b52d7e47911e2fedc3264eba454a0d55b7fee16a4beed6e975a6d01c6416f78ca194d590bbda398b8e9d61d1c1a01a5b64ead0004f4cbaf29f6ed3946cf059fc69774e23aad31229e1ac7ef268af65cfb069436179bb48b0aa868b00cb004d65b2898ad37f5c71ad2f88344fe90bf4bac23f6b3d8ca6bab188d7b4d4bf29784855d8b7d4de7c44ccf756433bc50758c9ff62cb0d20c6bd2f57411d1bbcc943f9681ecd6e74dcb088438ce03dd17a4828717e36e2920475949e407202f33193000ae0cef427400f4694fc586477e75c01ab0c68c5c2757291cc5c354cc3c2e29703d7d4afd1a32071089fd6ee6010329c588fc747f98b88b0df7ffa5cd1080697eeaf4293a686e53cb447d435783c774237faaa70798290a01bcfe738a3ddebe8f1b25429bcb6c4a06e1f8adcf6fe369f80a39b07fb23985416bcdd78b69613059994eca52875738886e8cabdb81113a83092b31ade747cfaa47b13254e974e96125111225ecf49e5549dbdb0498ebd8b326e7098a7736cd893cddf1bc31884f2f1ab926a05c0437378bb753b3efc74532ba6e7ca9b3ef25193a4ca937b38713a048fb28e697ded8f726ac5017309e3fe2f35b57428ce56d5db1a8ea29b5163a1424233e324d2a7ad672c8ef538c0a582122e45dc7cdde4e8cefb1f7820a29bbd8c2686f7d920ac4ab1d2df86eb530b2e9f7635eda4975477dd87c3f2ac45cdbeb8ec2329501956a418567337adda855e75c22bab6026d7d286a2519b3d73117db8563a0d21064ca6df59829cfc142fe682d71e3642f0103bf538c25ac05eea499fe68fa9397d2b162b93fc39f12e328ee6f8b7db387d67248db9f6a946347c7229d22532b85b9cd8659f2d0b7c709dd4f2821e00d3c25340a1b1681b55f65d1ec9691c4e5d85f3e7ea7128e17e0ee1ea3ed54b3b3c77aa5b87dc0e313c72493ce45dafd7a055bd38db3b4c2297b68ca3592b1a9891ee954f4fe016add4115186979f1a7d841c8a77cbd39b231b13d9993d54074887b4825a8365599192061e6484d8788bd25800cf34f9eaa9fdcc2dfe17263d44a4ad62452f2837b099015ebecb3c511281481bb969d3495ac91178fab38f657ee936451ca025bd9ef75c5d623b68931bb5447d7bb87160bbabc644aaa24726c8b7751d3845289c02372b4cdafddcbfb3ec756a7bd6acb4c875711d713ec71fb4476481f038750df4698028781c700f94f7f4d40922388820851e48c9cfc52284ac2e440a653993082054106092a864886f70d010701a08205320482052e3082052a30820526060b2a864886f70d010c0a0102a08204ee308204ea301c060a2a864886f70d010c0103300e0408f5944b68df3976d802020800048204c8573f12920f129546c7d3b4c87f4a1373e7249380718093b4c900cae2e937ac11b3e4244ced86d36632e0fc1292006653d159f026c6d16c20ea864ecaa91f870e8d3f0105f0ab611be1b38e857ea0c269bc956aa1377117e79f7fe5968992c766ada72f1b360ef9ad7dd86b3c76613ceb25d6d07b2a036cd57d5c1a14a764d61e1b8edd96f065203cd2b84f32d09fc1d2168cc1d06237e393da6a9c420d6a8ae409ffac32c7e86dbe087f3eef5085810beecc60465bb3012e4272534297917a3c8fed8d8aba98c73ffcfae254ab10d2fcd0ddb689c91729510918e619a842d1a22188fb2b824b7f61357b9c654a44aa299535c06748d3adcb083a842f8a13e97e2006cb2d0bbefd8195314d76b8f585cd8e45d558ea8d26aa5a8ab704efe29ef0a9f5cfdeefc70fba1d073363490b00c0dc8145b34e498e131433a6502d582c15b833d3369fd3bec92470665c4e0ace27b18651b098d8611d8618a295298975e6ba160d57dd9c3aba72c24a6fd1d7e08474dfdc3fd74b86d4a9a898c308f7709dc294e6439d7d00e317d6a7389f58f54fb559ef5adbf6986bb38b47f3a95f92a69371d029d584b6afd74109eb95aa05ed9f850307f974060736f2df6f6bbd1fb163664d26b7323acd14ca8acb2a935c4722f9af259506a7d3a4dba72fdb6986e5f940f4496ae51b2f035c400e1dee6fd8c67b22b17f3a945c14e2afd46cadd7e7ac10415e6388b58e65949fe2b6393a36e5c653cbcb4133df4eb2d5abc0d12c5b58ab161da5b850b6c9b2c840052221218b21d42a0da364cda40c66b0fdcf462ebdc924099b05324372ae9d824787f93fc49d81bbc46be964d15310829fdab7a4931717d3df27cde4a07c7e8c12babd97d1e72e7bb08dbc3a57b4c751f4873747f3c2bd37a8ec9fb2bac925e1ded38ac46dd1adf26c0e2ef11ac2b38d45bc335e03a588da1444a283cce13bdcffff19347d175d2d93828588fbf9d16d0b02bf7c44c8bc9bbacdd0b208d44fe05cfdb1a759e7710a23532be5761aa80e7f007dce5d81cfbe8fd4952efc7698582f2ca36f2f80c1def4b47c0a7383ee9afaaddb75abaf0605da9f73e0c50dcc07a92f88e180d216fdbe1437059de21b0ad1aaf9c4369cd2a20614d96cdbc4ac9346c6a7983fe4543b16f50cf97edb7953ae45abd95e4ccf6e335a50f4f82b1fd63a32b89b04c7bc16713b6a351e780bccb60b9fd9b97173c47342e22fd492e16ec980b534dabbc41b44ef58299fe2d5c1434e280342b87443591415a55f6daf81921c29b0db385899bf9d3c045b5d2942d24100ae8da592523acd5068c49a9413984c3b1a3fcbf2c566d3d503909a028d334ef62851ef277b5c1d100362dc6057631d089fbb0ecc97ae425deb7f7808049b96c15f4e1dd9ee84733bdadd3e4f5a08639904273b5fa62bc90c39a41afbdfb455940155be660bf754388e6d1d587fb4cc6f496ae30459817ead77f68007ad7c6acd5caed7e43ba7a53ae914e1d7e01258f4068585c0ce8848828b49e0cbbeac313d605e829d42ae2b26bc7060d73cdd52d5edd4ab3bce2f20b27d0420b3a2581a3ef0d183417d21b15dc1ed1f7e73daa9170537f39137b0e5708d5c318c0ae8d8a7f87e0ea5d710ed2fbe2c83651464cc06723d9173d04253809650e4e3061422f012dc177ecb2f5ae78b8df625beed63220bfaacb403c9582a15c5b884dba3f995836a190c4f647387813125302306092a864886f70d010915311604143dbf08c4e60fd8fc0a49027923588c40dc0c980530313021300906052b0e03021a05000414f0d4509827c3f98b115a469a0eb538938ebc188804085f332df8eaadeedc02020800
        required: true
      responses:
        "201":
          description: Keys stored
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EidasQecResponse"
        "200":
          description: Keys updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EidasQecResponse"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Bad Request:
                  $ref: "#/components/examples/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Forbidden:
                  $ref: "#/components/examples/Forbidden"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Internal Server Error:
                  $ref: "#/components/examples/InternalError"
      parameters:
        - name: id
          in: path
          schema:
            type: string
          examples:
            Basic DID:
              summary:  a DID
              value: "did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme"
          required: true
          description: DID to identify eIDAS keys associated with it
          allowEmptyValue: false
components:
  schemas:
    Proof:
      description: |
        One or more cryptographic proofs that can be used to detect tampering
        and verify the authorship of a credential or presentation.
      type: object
      properties:
        type:
          description: Type of signature
          type: string
          example: EcdsaSecp256k1Signature2019
        created:
          description: Creation time
          type: string
          example: "2019-06-22T14:11:44Z"
        proofPurpose:
          description: Purpose of the proof
          type: string
          example: assertionMethod
        verificationMethod:
          description: Verification method
          type: string
          example: "did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme#keys-1"
        jws:
          description: JSON Web Signature
          type: string
          example: eyJ...Wuc
      additionalProperties: true
      required:
        - type
        - created
        - proofPurpose
        - verificationMethod
        - jws
      example:
        type: EcdsaSecp256k1Signature2019
        created: "2019-06-18T21:19:10Z"
        proofPurpose: assertionMethod
        verificationMethod: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2#keys-1
        jws: eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2Us...
    AdesProof:
      description: |
        Ades Proof using an EIDAS QEC and signing with CADES and RSA keys.
      type: object
      properties:
        type:
          description: Type of signature
          type: string
          example: CAdESRSASignature2020
        created:
          description: Creation time
          type: string
          example: "2019-06-22T14:11:44Z"
        proofPurpose:
          description: Purpose of the proof
          type: string
          example: assertionMethod
        verificationMethod:
          description: EIDAS Certificate from QEC
          type: string
          example: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
        cades:
          description: CADES Signature in hexadecimal format
          type: string
          example: 308204c906092a864886f70d010702...266ad9fee3375d8095
      additionalProperties: true
      required:
        - type
        - created
        - proofPurpose
        - verificationMethod
        - cades
      example:
        type: "CAdESRSASignature2020"
        created: "2020-06-22T14:11:44Z"
        proofPurpose: "assertionMethod"
        verificationMethod: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
        cades: 308204c906092a864886f70d010702...266ad9fee3375d8095
    GlobalProof:
      description: |
        General Proof type to admit either AdesProof or Secp256k1 proof
      type: object
      properties:
        type:
          description: Type of signature
          type: string
          example: EcdsaSecp256k1Signature2019
        created:
          description: Creation time
          type: string
          example: "2019-06-22T14:11:44Z"
        proofPurpose:
          description: Purpose of the proof
          type: string
          example: assertionMethod
        verificationMethod:
          description: Verification method
          type: string
          example: "did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme#keys-1"
        jws:
          description: JSON Web Signature
          type: string
          example: eyJ...Wuc
        cades:
          description: CADES Signature in hexadecimal format
          type: string
      additionalProperties: true
      required:
        - type
        - created
        - proofPurpose
        - verificationMethod
      example:
        type: "CAdESRSASignature2020"
        created: "2020-06-22T14:11:44Z"
        proofPurpose: "assertionMethod"
        verificationMethod: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
        cades: 308204c906092a864886f70d010702...266ad9fee3375d8095
    verifiableCredentialEsealed:
      type: object
      title: Signature Response
      properties:
        id:
          type: string
          example: "https://example.edu/credentials/1872"
          description: "URI that is used to unambiguously refer to an object, such as a person, product, or organization."
          format: uri
        "@context":
          description: "An ordered set where the first item is a URI https://www.w3.org/2018/credentials/v1. It is used to define terms and help to express specific identifiers in a compact manner."
          items:
            type: string
          uniqueItems: true
          example:
            - "https://www.w3.org/2018/credentials/v1"
          type: array
        type:
          type: array
          description: Type of the object or the datatype of the typed value.
          example:
            - VerifiableCredential
            - UniversityDegreeCredential
          items:
            type: string
        credentialSubject:
          description: A set of objects that contain one or more properties that are each related to the subject of the credential.
          type: object
        issuer:
          description: "A URI or an object containing an id property. Example: DID of the verifiable credential/presentation issuer."
          type: string
        issuanceDate:
          type: string
          description: Date and time at which the information associated with the verifiable credential/presentation becomes valid.
          format: date-time
          example: "2010-01-01T19:23:24Z"
        expirationDate:
          type: string
          format: date-time
          example: "2020-01-01T19:23:24Z"
          description: Date and time at which a credential/presentation ceases to be valid.
        proof:
          type: object
      example:
        "@context":
          - "https://www.w3.org/2018/credentials/v1"
          - "https://api.vidchain.net/credentials/verifiableId/v1"
        id: "type-version-of-the-credential"
        type: "['VerifiableCredential','VerifiableID']"
        issuer: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme
        issuanceDate: "2019-06-22T14:11:44Z"
        expirationDate: "2019-06-22T14:11:44Z"
        credentialSubject:
          id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
          firstName: "Eva"
          lastName: "Monroe"
          gender: "Female"
          dateOfBirth: "12/11/1970"
          placeOfBirth: "Madrid"
          currentAddress: "Arago 179 4a"
          city: "Barcelona"
          state: "Catalunya"
          zip: "08011"
        proof:
          type: "CAdESRSASignature2020"
          created: "2020-06-22T14:11:44Z"
          proofPurpose: "assertionMethod"
          verificationMethod: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
          cades: 308204c906092a864886f70d010702...266ad9fee3375d8095
      required:
        - "@context"
        - type
        - proof
    verifiableCred:
      type: object
      description: Verifiable Credential Data Model
      example:
        simple verifiable credential:
          "@context":
            - "https://www.w3.org/2018/credentials/v1"
            - "https://www.w3.org/2018/credentials/examples/v1"
          id: "http://example.edu/credentials/1872"
          type:
            - VerifiableCredential
            - AlumniCredential
          issuer: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
          issuanceDate: "2010-01-01T19:73:24Z"
          credentialSubject:
            id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
            alumniOf:
              id: did:key:zQ3shZc2QzApp2oymGvQbzP8eKheVshBHbU4ZYjeXqwSKEn6N
              name:
                - value: Example University
                  lang: en
                - value: "Exemple d'Universit√©"
                  lang: fr
          proof:
            type: EcdsaSecp256k1Signature2019
            created: "2019-06-18T21:19:10Z"
            proofPurpose: assertionMethod
            verificationMethod: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2#keys-1
            jws: eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2Us...
        verifiable credential with ades proof:
          "@context":
            - "https://www.w3.org/2018/credentials/v1"
            - "https://www.w3.org/2018/credentials/examples/v1"
          id: "http://example.edu/credentials/1872"
          type:
            - VerifiableCredential
            - AlumniCredential
          issuer: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
          issuanceDate: "2010-01-01T19:73:24Z"
          credentialSubject:
            id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
            alumniOf:
              id: did:key:zQ3shZc2QzApp2oymGvQbzP8eKheVshBHbU4ZYjeXqwSKEn6N
              name:
                - value: Example University
                  lang: en
                - value: "Exemple d'Universit√©"
                  lang: fr
          proof:
            type: "CAdESRSASignature2020"
            created: "2020-06-22T14:11:44Z"
            proofPurpose: "assertionMethod"
            verificationMethod: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
            cades: 308204c906092a864886f70d010702...266ad9fee3375d8095
        verifiable credential with multiple proofs:
          "@context":
            - "https://www.w3.org/2018/credentials/v1"
            - "https://www.w3.org/2018/credentials/examples/v1"
          id: "http://example.edu/credentials/1872"
          type:
            - VerifiableCredential
            - AlumniCredential
          issuer: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
          issuanceDate: "2010-01-01T19:73:24Z"
          credentialSubject:
            id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
            alumniOf:
              id: did:key:zQ3shZc2QzApp2oymGvQbzP8eKheVshBHbU4ZYjeXqwSKEn6N
              name:
                - value: Example University
                  lang: en
                - value: "Exemple d'Universit√©"
                  lang: fr
          proof:
            - type: "EcdsaSecp256k1Signature2019"
              created: "2019-06-22T14:11:44Z"
              proofPurpose: "assertionMethod"
              verificationMethod: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme#keys-1
              jws: "eyJhbGciOiJFU...pKTV3co3wXAE"
            - type: "CAdESRSASignature2020"
              created: "2020-06-22T14:11:44Z"
              proofPurpose: "assertionMethod"
              verificationMethod: "-----BEGIN CERTIFICATE-----MIICUTCCAfugAwIBAgIBA... -----END CERTIFICATE-----"
              cades: 308204c906092a864886f70d010702...266ad9fee3375d8095
      title: Verifiable Credential
      properties:
        id:
          type: string
          example: "https://example.edu/credentials/1872"
          description: "URI that is used to unambiguously refer to an object, such as a person, product, or organization."
          format: uri
        "@context":
          description: "An ordered set where the first item is a URI https://www.w3.org/2018/credentials/v1. It is used to define terms and help to express specific identifiers in a compact manner."
          items:
            type: string
          uniqueItems: true
          example:
            - "https://www.w3.org/2018/credentials/v1"
          type: array
        type:
          type: array
          description: Type of the object or the datatype of the typed value.
          example:
            - VerifiableCredential
            - UniversityDegreeCredential
          items:
            type: string
        credentialSubject:
          description: A set of objects that contain one or more properties that are each related to the subject of the credential.
          type: object
        issuer:
          description: "A URI or an object containing an id property. Example: DID of the verifiable credential/presentation issuer."
          type: string
        issuanceDate:
          type: string
          description: Date and time at which the information associated with the verifiable credential/presentation becomes valid.
          format: date-time
          example: "2010-01-01T19:23:24Z"
        expirationDate:
          type: string
          format: date-time
          example: "2020-01-01T19:23:24Z"
          description: Date and time at which a credential/presentation ceases to be valid.
        proof:
          type: object
      required:
        - "@context"
        - type
        - proof
    subject:
      title: Subject
      type: object
      description: A thing about which claims are made
      properties:
        id:
          type: string
          description: "Object MAY contain an id"
          example: "did:example:ebfeb1f712ebc6f1c276e12ec21"
      additionalProperties: true
      example:
        Diploma:
          id: "did:example:ebfeb1f712ebc6f1c276e12ec21"
          degree:
            type: BachelorDegree
            name: Bachelor of Science and Arts
        Affiliation:
          id: "did:example:c276e12ec21ebfeb1f712ebc6f1"
          name: Morgan Doe
          spouse: "did:example:ebfeb1f712ebc6f1c276e12ec21"
        ESSIF eID:
          id: "did:vid:evas-did"
          personIdentifier: BE/BE/02635542Y
          currentFamilyName: Eva
          currentGivenName: Adams
          birthName: Eva
          dateOfBirth: "1998-02-14"
          placeOfBirth: Brussels
          currentAddress: "44, rue de Fame"
          gender: Female
    arrayGeneralProof:
      title: Array of Proofs (either Ades or secp256k1)
      type: array
      uniqueItems: true
      items:
        $ref: "#/components/schemas/GlobalProof"
    credential:
      type: object
      description: Credential Data Model without Proof
      example:
        simple credential payload:
          "@context":
            - "https://www.w3.org/2018/credentials/v1"
            - "https://www.w3.org/2018/credentials/examples/v1"
          id: "http://example.edu/credentials/1872"
          type:
            - VerifiableCredential
            - AlumniCredential
          issuer: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
          issuanceDate: "2010-01-01T19:73:24Z"
          credentialSubject:
            id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
            alumniOf:
              id: did:key:zQ3shZc2QzApp2oymGvQbzP8eKheVshBHbU4ZYjeXqwSKEn6N
              name:
                - value: Example University
                  lang: en
                - value: "Exemple d'Universit√©"
                  lang: fr
      title: Credential
      properties:
        id:
          type: string
          example: "https://example.edu/credentials/1872"
          description: "URI that is used to unambiguously refer to an object, such as a person, product, or organization."
          format: uri
        "@context":
          description: "An ordered set where the first item is a URI https://www.w3.org/2018/credentials/v1. It is used to define terms and help to express specific identifiers in a compact manner."
          items:
            type: string
          uniqueItems: true
          example:
            - "https://www.w3.org/2018/credentials/v1"
          type: array
        type:
          type: array
          description: Type of the object or the datatype of the typed value.
          example:
            - VerifiableCredential
            - UniversityDegreeCredential
          items:
            type: string
        credentialSubject:
          description: A set of objects that contain one or more properties that are each related to the subject of the credential.
          type: object
        issuer:
          description: "A URI or an object containing an id property. Example: DID of the verifiable credential/presentation issuer."
          type: string
        issuanceDate:
          type: string
          description: Date and time at which the information associated with the verifiable credential/presentation becomes valid.
          format: date-time
          example: "2010-01-01T19:23:24Z"
        expirationDate:
          type: string
          format: date-time
          example: "2020-01-01T19:23:24Z"
          description: Date and time at which a credential/presentation ceases to be valid.
      additionalProperties: true
      required:
        - "@context"
        - type
    SignatureInput:
      title: Signature EIDAS Input
      type: object
      description: Input data to eSeal a given Credential or Verifiable Credential
      properties:
        issuer:
          description: DID of the Issuer
          type: string
          example: did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme
        payload:
          description: W3C Verifiable Credential or Credential (without Proof) to eSeal
          type: object
        password:
          description: Password for the stored QEC associated with the issuer
          type: string
          example: <password>
      required:
        - issuer
        - payload
    EidasQecInput:
      title: Input EIDAS QEC
      type: object
      description: Input data to associate eIDAS keys with a did
      properties:
        did:
          type: string
          description: DID of EIDAS key owner
          example: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
        eidasQec:
          description: P12 file with a QEC to eSeal. Supported keys algorithms are RSA and EC with secp256k1 curve
          type: string
          format: hex
          example: 30820a5102010330820a1706092a864886f70d010701a0820a0804820a0430820a00308204b706092a864886f70d010706a08204a8308204a40201003082049d06092a864886f70d010701301c060a2a864886f70d010c0106300e0408aafc004c0e4c0ed20202080080820470bf1b516867a1f611e7bd3b547818e77d477b353586d6806625225910454ca2f4fe6bbf3bcc203538288c445ebbcaa2f5f68d6b0037061bda3426e9219caf16f7cb8ba8802e4ed31178cc3c35c576f5d1d9b8c53bf3199596d14ccd003771126dd117c9dd9ec68d9e691d48adb5dd68fd7a25f5db139dd7081150216433555bdd16429d8278ef6a2e270e0e25b908d56a7bc0662db3170748a3364b776c0ff5da21393b4ee88ff441373bef05e48f0ab71be35f2b7cfe7ff8f614202cf52dd7bbd8aa2a46ba0d1c8633a35ad86584a0bccf0ea001c4d2a01e4851fba954374f65771abcc9e0025c5276b72b0ecfb83711b3d83eaafc8b52d7e47911e2fedc3264eba454a0d55b7fee16a4beed6e975a6d01c6416f78ca194d590bbda398b8e9d61d1c1a01a5b64ead0004f4cbaf29f6ed3946cf059fc69774e23aad31229e1ac7ef268af65cfb069436179bb48b0aa868b00cb004d65b2898ad37f5c71ad2f88344fe90bf4bac23f6b3d8ca6bab188d7b4d4bf29784855d8b7d4de7c44ccf756433bc50758c9ff62cb0d20c6bd2f57411d1bbcc943f9681ecd6e74dcb088438ce03dd17a4828717e36e2920475949e407202f33193000ae0cef427400f4694fc586477e75c01ab0c68c5c2757291cc5c354cc3c2e29703d7d4afd1a32071089fd6ee6010329c588fc747f98b88b0df7ffa5cd1080697eeaf4293a686e53cb447d435783c774237faaa70798290a01bcfe738a3ddebe8f1b25429bcb6c4a06e1f8adcf6fe369f80a39b07fb23985416bcdd78b69613059994eca52875738886e8cabdb81113a83092b31ade747cfaa47b13254e974e96125111225ecf49e5549dbdb0498ebd8b326e7098a7736cd893cddf1bc31884f2f1ab926a05c0437378bb753b3efc74532ba6e7ca9b3ef25193a4ca937b38713a048fb28e697ded8f726ac5017309e3fe2f35b57428ce56d5db1a8ea29b5163a1424233e324d2a7ad672c8ef538c0a582122e45dc7cdde4e8cefb1f7820a29bbd8c2686f7d920ac4ab1d2df86eb530b2e9f7635eda4975477dd87c3f2ac45cdbeb8ec2329501956a418567337adda855e75c22bab6026d7d286a2519b3d73117db8563a0d21064ca6df59829cfc142fe682d71e3642f0103bf538c25ac05eea499fe68fa9397d2b162b93fc39f12e328ee6f8b7db387d67248db9f6a946347c7229d22532b85b9cd8659f2d0b7c709dd4f2821e00d3c25340a1b1681b55f65d1ec9691c4e5d85f3e7ea7128e17e0ee1ea3ed54b3b3c77aa5b87dc0e313c72493ce45dafd7a055bd38db3b4c2297b68ca3592b1a9891ee954f4fe016add4115186979f1a7d841c8a77cbd39b231b13d9993d54074887b4825a8365599192061e6484d8788bd25800cf34f9eaa9fdcc2dfe17263d44a4ad62452f2837b099015ebecb3c511281481bb969d3495ac91178fab38f657ee936451ca025bd9ef75c5d623b68931bb5447d7bb87160bbabc644aaa24726c8b7751d3845289c02372b4cdafddcbfb3ec756a7bd6acb4c875711d713ec71fb4476481f038750df4698028781c700f94f7f4d40922388820851e48c9cfc52284ac2e440a653993082054106092a864886f70d010701a08205320482052e3082052a30820526060b2a864886f70d010c0a0102a08204ee308204ea301c060a2a864886f70d010c0103300e0408f5944b68df3976d802020800048204c8573f12920f129546c7d3b4c87f4a1373e7249380718093b4c900cae2e937ac11b3e4244ced86d36632e0fc1292006653d159f026c6d16c20ea864ecaa91f870e8d3f0105f0ab611be1b38e857ea0c269bc956aa1377117e79f7fe5968992c766ada72f1b360ef9ad7dd86b3c76613ceb25d6d07b2a036cd57d5c1a14a764d61e1b8edd96f065203cd2b84f32d09fc1d2168cc1d06237e393da6a9c420d6a8ae409ffac32c7e86dbe087f3eef5085810beecc60465bb3012e4272534297917a3c8fed8d8aba98c73ffcfae254ab10d2fcd0ddb689c91729510918e619a842d1a22188fb2b824b7f61357b9c654a44aa299535c06748d3adcb083a842f8a13e97e2006cb2d0bbefd8195314d76b8f585cd8e45d558ea8d26aa5a8ab704efe29ef0a9f5cfdeefc70fba1d073363490b00c0dc8145b34e498e131433a6502d582c15b833d3369fd3bec92470665c4e0ace27b18651b098d8611d8618a295298975e6ba160d57dd9c3aba72c24a6fd1d7e08474dfdc3fd74b86d4a9a898c308f7709dc294e6439d7d00e317d6a7389f58f54fb559ef5adbf6986bb38b47f3a95f92a69371d029d584b6afd74109eb95aa05ed9f850307f974060736f2df6f6bbd1fb163664d26b7323acd14ca8acb2a935c4722f9af259506a7d3a4dba72fdb6986e5f940f4496ae51b2f035c400e1dee6fd8c67b22b17f3a945c14e2afd46cadd7e7ac10415e6388b58e65949fe2b6393a36e5c653cbcb4133df4eb2d5abc0d12c5b58ab161da5b850b6c9b2c840052221218b21d42a0da364cda40c66b0fdcf462ebdc924099b05324372ae9d824787f93fc49d81bbc46be964d15310829fdab7a4931717d3df27cde4a07c7e8c12babd97d1e72e7bb08dbc3a57b4c751f4873747f3c2bd37a8ec9fb2bac925e1ded38ac46dd1adf26c0e2ef11ac2b38d45bc335e03a588da1444a283cce13bdcffff19347d175d2d93828588fbf9d16d0b02bf7c44c8bc9bbacdd0b208d44fe05cfdb1a759e7710a23532be5761aa80e7f007dce5d81cfbe8fd4952efc7698582f2ca36f2f80c1def4b47c0a7383ee9afaaddb75abaf0605da9f73e0c50dcc07a92f88e180d216fdbe1437059de21b0ad1aaf9c4369cd2a20614d96cdbc4ac9346c6a7983fe4543b16f50cf97edb7953ae45abd95e4ccf6e335a50f4f82b1fd63a32b89b04c7bc16713b6a351e780bccb60b9fd9b97173c47342e22fd492e16ec980b534dabbc41b44ef58299fe2d5c1434e280342b87443591415a55f6daf81921c29b0db385899bf9d3c045b5d2942d24100ae8da592523acd5068c49a9413984c3b1a3fcbf2c566d3d503909a028d334ef62851ef277b5c1d100362dc6057631d089fbb0ecc97ae425deb7f7808049b96c15f4e1dd9ee84733bdadd3e4f5a08639904273b5fa62bc90c39a41afbdfb455940155be660bf754388e6d1d587fb4cc6f496ae30459817ead77f68007ad7c6acd5caed7e43ba7a53ae914e1d7e01258f4068585c0ce8848828b49e0cbbeac313d605e829d42ae2b26bc7060d73cdd52d5edd4ab3bce2f20b27d0420b3a2581a3ef0d183417d21b15dc1ed1f7e73daa9170537f39137b0e5708d5c318c0ae8d8a7f87e0ea5d710ed2fbe2c83651464cc06723d9173d04253809650e4e3061422f012dc177ecb2f5ae78b8df625beed63220bfaacb403c9582a15c5b884dba3f995836a190c4f647387813125302306092a864886f70d010915311604143dbf08c4e60fd8fc0a49027923588c40dc0c980530313021300906052b0e03021a05000414f0d4509827c3f98b115a469a0eb538938ebc188804085f332df8eaadeedc02020800
      example:
        EIDAS QEC Example:
          did: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
          eidasQec: (b'0\x82\x03\xc9\x02\x01\x030\x82\x03\x8f\x06\t*\x86H\x86\xf7\r\x01\x07\x01\xa0\x82\x03\x80\x04\x82\x03|0\x82\x03x0\x82\x02w\x06\t*\x86H\x86\xf7\r\x01\x07\x06\xa0\x82\x02h0\x82\x02d\x02\x01\x000\x82\x02]\x06\t*\x86H\x86\xf7\r\x01\x07\x010\x1c\x06\n*\x86H\x86\xf7\r\x01\x0c\x01\x060\x0e\x04\x08\'?\xfc\xa4]\xbf\x80k\x02\x02\x08\x00\x80\x82\x020}A9N;\x89/j\x8e8\xc57=\x1d!\xae!0\xcd\xaf7}cN>\xcac\xb6nqU\x8c>\x1ff\xce\xe45\xcf\r\xb8~O\xf1\xae\xd5\xde \x0ch\xe1\xe3]\x90\xbc\xa5cBv\xbc\xbf\xc3\x1a\xf2\x91\xa6\x9a\xd1\xac"?\xealH\x06\xf0\xce\xb8\x96s\xc7\xca\x0bK\xaa\xe7+\xa5\xe3\xb7\x82\x07\xfc\x1d%<\x95\x9d:\xff\xed\xc7\x03\xb9\x7f\xa5\xbb\xab\xfd`\x17\x01\x1fp\xe6W\xc7\x88\xde\xa4\xa7\xd2\x8f\xb48m[\xcdl\xb6\xba#0B\x97\xae[\x8d\xf4\x99\xa4\xcb\x94\xea>\x04\xbc\xc7\'\xc2\xc4\xc0b\x01\xe7\xb6O\xfe\xdaA~\xb7\xa8\x8a\x02\x82\x7f\xe9\x1f\xae\x8c\xef=\xf6\x90(\xddK\xe5\xeaB$XC\x84U\\N=ut\xc9\xe5]\xe2\x0b\xe8\x80\xc3\x84G~M\xa8+\xb1\xb0sL\xcb\xb7&\xb4jQM\x8c\x8c\x8b\xbe\xbe7Zghj\x1b\xf5\x00\xe1\x06f.\xbb\xf5\x98\xf8j$\xa2\xc9L\xe1\x08S\xbe\xc2Z\x14f\xb6\xa3\xa2\x8dI\xd1\x07~\x08\x9e\xdf\xd2"\xc9\xaa\xc8a\xc5Q\x89\xac\x91{\x967H]c0\xa2N\xe4\xbe\x14\x18\xe3aC\x88B\x80\r\x84\x90\xcf\xf8\x9c2\xccs\xea~bg\x99OU\x04WU:\xc9\x03\x9e\xfa\x96\x13D\x89}\xed\x92\xc5?G\xf7\xdb\xa3\x0eg;\x01\x93-\x88\xa5;\xc6\xc1:\xe3\x93\xfa\x9a9\xde\xe5:\\\x88\x8a\x92\xf9T\xb4|\xa4\xf3\xecT-\xc0\xa7Y\xf3\x0f\x0c\xb3\x92\x06\t\x9f\x1c\x96\x9c\xf4*\xfc.\x1b7.\xa2\x80\x1b\xd2\xf8DQ\xa4\x86\x13\x16E\x1b%\x90%\xeaO\xf0#\x06\x87\xe0\x8a\xfe\xcc\xb0\xb6F\x08\xb1y\xca\xc8\x92\x0bD\xd6\xd0\xb2\xfd\xa4[[\xe3\xcf\xe2\x9c\x00\x97\xbc\x95\x0f\x8a\xaf\xbb\x8c\xa6\xaa]5\xb3\x01[\xc1a\xe9\x06@\x8a\xbc\xd8]\xba\'&\xd6\xaa_\x9e+c\xfb\x9d\xc6\xbc\xd8\x1d\xe5t\xe8\x9eL@\x80\x99\xeeV\x12\x06\x04a\xaa7J\xbd\xa1\xe3p2_\x9b\xd7\xb6\xdd\x98\xf1kx\x19\x9a\xc8\xdeXP\xa6\x15\xd7\xb5\xc9\xb1N\xefbZ\xb6\x8e\x91\xff\xa2\x877\x84f\xc1\xee\xcd7\x1dZp\xc4\xce\xe3\x1f\xda\x0e\x9fY\xa3\xce\x0b~N\xaa\xe6\x91\xee<\xf0\x13\xa1:\x1a\x0f\xdf\xce%0\x81\xfa\x06\t*\x86H\x86\xf7\r\x01\x07\x01\xa0\x81\xec\x04\x81\xe90\x81\xe60\x81\xe3\x06\x0b*\x86H\x86\xf7\r\x01\x0c\n\x01\x02\xa0\x81\xac0\x81\xa90\x1c\x06\n*\x86H\x86\xf7\r\x01\x0c\x01\x030\x0e\x04\x08\xfa\xe77\x12\xfb\xcbB\xe9\x02\x02\x08\x00\x04\x81\x88(\xde\x9f?\xc3\xcc#f\xb9>\x12\xa1\xd7\xefF\xea\xa3\xd8\x88v%\x1cv\xf8I\xb4K\x1e\xc6q\x85\xe2\x95a\x83*pI@\x13q\x19>\xdb\xce\xb0\x86 \x16n\xce\xc1\xe0cl\xd7_H\xc2\x8c\xac\xdc\xc5<\xb58\xe6\xfa\xfc\xf8\xf5HRH\x83\x17\xd5(\xcf;=z\x12r\x18z\x95\x7fz\xb4\xac\xeb0\xe8\xc4\xb5O\xae>\xa07C>,\xd2\xd3;\xbeQ\xab\xdc\xb0\x01\xd8\x93s\xfchu\xae\xbe\x97%\x19\xb5\xf4\xbc\xb9\x05\x83\xcc)/\xbc\x16e1%0#\x06\t*\x86H\x86\xf7\r\x01\t\x151\x16\x04\x14]F\x8e\xb5\xcd\x8c\r\xb1q\xcd\xf3\x87X\x80\x9f\x04\xac\x95\xeb\xc8010!0\t\x06\x05+\x0e\x03\x02\x1a\x05\x00\x04\x14\x13m\x9f\xe5m\x93^\xb5G\x81q\xf4\x1aN\xf2\x90\xdeb\xb06\x04\x08\xf9\x10\x1c\x1c:f\xca\xb7\x02\x02\x08\x00').hex()),
          password: ak!w6xsxp7?=
      required:
        - did
        - eidasQec
    EidasQecResponse:
      title: EidasQecResponse
      type: object
      description: Response for a sucessful eIDAS keys set-up.
      properties:
        id:
          type: string
          description: DID of EIDAS key owner
          example: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
      example:
        id: did:key:zQ3shtxV1FrJfhqE1dvxYRcCknWNjHc3c5X1y3ZSoPDi2aur2
    ValidationResult:
      required:
        - checks
        - errors
        - warnings
      type: object
      properties:
        indication:
          type: string
          enum:
            - TOTAL_PASSED
            - TOTAL_FAILED
            - INDETERMINATE
          example:
            - TOTAL_PASSED
        checks:
          type: array
          description: The checks performed
          example:
            - proof
          items:
            type: string
            description: The checks performed
            example: '["proof"]'
        warnings:
          type: array
          description: Warnings
          example: [ ]
          items:
            type: string
            description: Warnings
            example: '[]'
        errors:
          type: array
          description: Errors
          example: [ ]
          items:
            type: string
            description: Errors
            example: '[]'
    Problem:
      description: A Problem Details object (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type.
          default: "about:blank"
        title:
          type: string
          description: |
            A short summary of the problem type.
          example: Internal Server Error
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 500
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the problem.
          example: Connection timeout
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
    SessionsRequest:
      title: Sessions Request
      description: Request for OAuth 2.0 JWT bearer assertion grant.
      type: object
      properties:
        grantType:
          description: 'OAuth 2.0 grant type. Must be set to "urn:ietf:params:oauth:grant-type:jwt-bearer"'
          type: string
          example: "urn:ietf:params:oauth:grant-type:jwt-bearer"
        assertion:
          type: string
          description: Self-signed JWT
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        scope:
          type: string
          description: Scope is used to define the authentication method.
          enum:
            - eidas profile user
            - eidas profile entity
          example: vidchain profile user
      required:
        - grantType
        - assertion
        - scope
    SessionsResponse:
      title: Sessions Response
      type: object
      properties:
        accessToken:
          description: Authentication JWT to access the API.
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        tokenType:
          description: 'Type of the authentication token. Supported type "bearer".'
          type: string
          example: Bearer
        expiresIn:
          description: JWT expiration in seconds.
          type: integer
          example: 900
        issuedAt:
          description: "Time of JWT issuance. Format: unix timestamp"
          type: string
          example: "1467841035013"
      description: Authentication JWT
  examples:
    BadRequest:
      value:
        title: Bad Request
        status: 400
        detail: Bad request
    Unauthorized:
      value:
        title: Unauthorized
        status: 401
        detail: Unauthorized
    Forbidden:
      value:
        title: Forbidden
        status: 403
        detail: Forbidden
    IssuerNotFound:
      value:
        title: Issuer Not Found
        status: 400
        detail: Issuer not found in the trusted apps registry.
    ExpiredToken:
      value:
        title: Token Expired
        status: 400
        detail: The token has expired.
    InternalError:
      value:
        title: Internal Server Error
        status: 500
        detail: |
          The server encountered an internal error and was unable to complete
          your request
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT